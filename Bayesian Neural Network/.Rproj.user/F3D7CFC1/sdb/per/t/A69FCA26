{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Convergence Diagnostic\"\nauthor: \"Umbertol Junior Mele 1388371\"\ndate: \"29 settembre 2017\"\noutput: pdf_document\n---\n\n## Third case conjugate priors for Betas and sigma and flat prior for Gammas\n\n\\centering\n\n#### Posterior marginal \n```{r, echo=FALSE}\nrequire(coda)\ntake_the_weight <- function(index){\n  dim <- length(index)\n  for(i in 1:dim){\n    i <- as.character(index[i])\n    if(length(grep('Beta.0', i))){\n      val <- net.1$weights[[1]][[2]][1]\n      i <-''\n    }\n    if(length(grep(\"Beta\", i))){\n      v <- as.numeric(gsub(\".*([0-9]+).*$\", \"\\\\1\", index))\n      val <- net.1$weights[[1]][[2]][1+v]\n      i <-''\n    }\n    if(length(grep('Gamma.0', i))){\n      v <- as.numeric(gsub(\".*([0-9]+).*$\", \"\\\\1\", index))\n      val <- net.1$weights[[1]][[1]][1,v]\n      i <-''\n    }\n    if(length(grep(\"Gamma\", i))){\n      v <- as.numeric(unlist(strsplit(gsub(\".*([0-9]+,[0-9]+).*$\", \"\\\\1\", index),',')))\n      val <- net.1$weights[[1]][[1]][v[2],v[1]]\n      i <-''\n    }\n  }\n  return(val)\n}\n\n```\n\n\n```{r, echo=FALSE}\n# third case conjugate pror mixed with flat prior -------------------------\nload('chain_conjugate_BNN.RData')\nload('chain_conjugate_BNN_2.RData')\nload('network_for_K_15_1000.RData')\nind <- read.csv(file = \"muller_rois_index.txt\", sep = '\\t', header = F)\nsim <- c3$chain\nsim1 <- c2\nindex <- colnames(sim)\n# choose l from 1 to 127\n# looking to marginal distributions..\nl=c(1,16,23,18)\ns1 <- sim$`Beta 1`\ns2 <- sim$`Beta 0`\ns3 <- sim$`Gamma 2.1`\ns4 <- sim$`Gamma 1.2`\n\ns1_1 <- s1\ns1_2 <- s2\ns1_3 <- s3\ns1_4 <- s4\n\ns2_1 <- sim1$`Beta 1`\ns2_2 <- sim1$`Beta 0`\ns2_3 <- sim1$`Gamma 2.1`\ns2_4 <- sim1$`Gamma 1.2`\n\n\nopt1 <- take_the_weight(ind[l[1],1])\nopt2 <- take_the_weight(ind[l[2],1])\nopt3 <- take_the_weight(ind[l[3],1])\nopt4 <- take_the_weight(ind[l[4],1])\n\npar(mfrow=c(2,2), mar=c(2.5,2.5,1.5,2.5))\nplot(density(s1), main = ind[l[1],1])\npoints(opt1,0, col='blue')\nplot(density(s2), main = ind[l[2],1])\npoints(opt2,0, col='blue')\nplot(density(s3), main = ind[l[3],1])\npoints(opt3,0, col='blue')\nplot(density(s4), main = ind[l[4],1])\npoints(opt3,0, col='blue')\n\n```\n\n#### Sigma posterior marginal\n\n```{r, echo=FALSE}\nl= 128; index[l]\nplot(density(sim[,l]), main = index[l])\nHPDinterval(as.mcmc(sim[,l]))\n\n```\n\n\\newpage\n\n#### Traceplot for marginals\n\n```{r, echo=FALSE, fig.height=10, fig.width=10}\n# Traceplots\n\n# Traceplots\npar(mfrow=c(2,4), mar=c(2.5,2.5,1.5,2.5))\nts.plot(s1,main= 'Beta 1')\nts.plot(s2,main= 'Beta 0')\nts.plot(s3,main= 'Gamma.0 2')\nts.plot(s4,main= 'Gamma 1.1')\n\nts.plot(cbind(s1_1,s2_1),main= 'Beta 1')\nts.plot(cbind(s1_2,s2_2),main= 'Beta 0')\nts.plot(cbind(s1_3,s2_3),main= 'Gamma.0 2')\nts.plot(cbind(s1_4,s2_4),main= 'Gamma 1.1')\n\n```\n\\newpage\n\n#### Traceplot for running means\n\n```{r, echo=FALSE, fig.height=10, fig.width=10}\n# running mean\n\npar(mfrow=c(2,4), mar=c(2.5,2.5,1.5,2.5))\nts.plot(cumsum(s1)/seq_along(s1),main= 'Beta 1')\nts.plot(cumsum(s2)/seq_along(s2),main= 'Beta 0')\nts.plot(cumsum(s3)/seq_along(s3),main= 'Gamma.0 2')\nts.plot(cumsum(s4)/seq_along(s4),main= 'Gamma 1.1')\n\n# running means two chains\n\nts.plot(cbind(cumsum(s1_1)/seq_along(s1_1),cumsum(s2_1)/seq_along(s2_1)))\nts.plot(cbind(cumsum(s1_2)/seq_along(s1_2),cumsum(s2_2)/seq_along(s2_2)))\nts.plot(cbind(cumsum(s1_3)/seq_along(s1_3),cumsum(s2_3)/seq_along(s2_3)))\nts.plot(cbind(cumsum(s1_4)/seq_along(s1_4),cumsum(s2_4)/seq_along(s2_4)))\n\n\n```\n\n\n\n\\newpage\n\n#### Autocorrelation and Auto-correlation\n\n\n```{r, echo=FALSE, fig.height=10, fig.width=10}\npar(mfrow=c(2,4), mar=c(2.5,2.5,1.5,2.5))\n\n# Auto-correlation functions\nacf(s1,lag.max = 10000)\nacf(s2,10000)\nacf(s3,10000)\nacf(s4,10000)\n\n\n# Cross-Corelation\nccf(s1, s2,10000)\nccf(s1, s3,10000)\nccf(s1, s4,10000)\n\n\n```\n\n\n\\newpage\n\n#### Spectral analysis\n\nUsing coda Geweke Convergence diagnostic, I have this result:\n\ncentering\n\\begin{tabular}{rlll}\n  \\hline\n & chain & Z\\_score & p\\_value \\\\ \n  \\hline\n1 & Beta1 & -2.19636645062859 & 0.0140328624839433 \\\\ \n  2 & Beta0 & -1.94686731237249 & 0.0257753222014407 \\\\ \n  3 & gamma 2,1 & 4.23711548897864 & 1.132048469632e-05 \\\\ \n  4 & gamma 1,2 & 9.8945067466688 & 0 \\\\ \n   \\hline\n\\end{tabular}\n\nUsing coda Heidelberger and Welch Convergence diagnostic, I have this result:\n\n```{r, echo=FALSE}\nrequire(coda)\n\nheidel.diag(s1)\nheidel.diag(s2)\nheidel.diag(s3)\nheidel.diag(s4)\n```\n\n\n\\newpage\n\n#### Predictive Posterior distribution analysis\n\n```{r,echo=FALSE, fig.height=12, fig.width=10}\nind <- read.csv(file = \"muller_rois_index.txt\", sep = '\\t', header = F)\nload('data_simmulate.RData')\npar(mfrow=c(5,5), mar=c(2.5,2.5,1.5,2.5))\no <- sample(x =1:100, size = 25)\nsim <- c3\nfor(i in 1:25){\n  l= 106+ o[i]\n  plot(density(sim$Y.rep[,o[i]]),main = ind[l,1])\n  points(Y[o[i]],0,col='blue')\n  p <- mean(sim$Y.rep[,o[i]]< Y[o[i]])\n  p_val <- min(p, 1-p)\n  legend('topleft',legend = bquote(p-value ~ \"=\" ~ .(p_val)),lty = 1:2, cex = 0.5)\n}\n\n```\n\n\n\\newpage\n\n#### visualizing the posterior log-likelihood\n\n```{r, echo=FALSE, fig.height=10, fig.width=10}\n# visualizing the posterior log-likelihood\n\nts.plot(c3$deviance)\n\n```\n",
    "created" : 1506701353051.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1159398189",
    "id" : "A69FCA26",
    "lastKnownWriteTime" : 1506708048,
    "last_content_update" : 1506708048344,
    "path" : "C:/Users/Umbertojunior/Desktop/data science/Second Semestr/SDS 2/project/Bayesian Neural Network/presentation/plot_figure3.Rmd",
    "project_path" : "presentation/plot_figure3.Rmd",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}